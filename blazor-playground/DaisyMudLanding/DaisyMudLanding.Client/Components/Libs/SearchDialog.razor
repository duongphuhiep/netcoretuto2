<Dialog
    @ref="_dialog"
    class="modal modal-top scroll-0 [scrollbar-gutter:stable_both-edges]">
    <div class="modal-box max-w-md mx-auto">
        <label class="input input-primary input-lg w-full">
            <LiSearch/>
            <DebouncedInput
                type="search"
                required
                placeholder="Search"
                @ref="_searchInput"
                ValueChanged="OnValueChanged"
                autofocus
            />
        </label>
        <div class="max-h-79 overflow-y-scroll list">
            @if (_foundItems is null)
            {
                //print a skeleton
                <a class="list-row hover:bg-base-200 skeleton text-transparent">
                    <div class="landing-text-small skeleton">Lorem</div>
                    <div class="landing-text-c50 list-col-wrap text-xs skeleton text-transparent">
                        Lorem ipsum dolor sit amet <span class="text-accent">consectetur</span> adipisicing elit.
                    </div>
                </a>
            }
            else
            {
                @foreach (var item in _foundItems)
                {
                    <SearchItem Term=@_searchTerm FoundItem=item></SearchItem>
                }
            }
        </div>
        <div class="opacity-20 text-xs mt-2 float-end">
            Press ESC key or click outside to close
        </div>
    </div>
    <form method="dialog" class="modal-backdrop">
        <button></button>
    </form>
</Dialog>

@inject SearchService _searchService

@code
{
    private Dialog? _dialog;
    private DebouncedInput? _searchInput;
    private FoundItem[]? _foundItems;
    private string _searchTerm = "";

    protected override async Task OnInitializedAsync()
    {
        _foundItems = await _searchService.QuerySearchResultFromDatabase("", default);
    }

    public async Task ShowModalAsync()
    {
        if (_dialog is null) return;
        await _dialog.ShowModal(_searchInput?.InputElement);
    }

    private async Task OnValueChanged(string arg)
    {
        _searchTerm = arg;
        _foundItems = await _searchService.QuerySearchResultFromDatabase(arg, default);
    }
}
