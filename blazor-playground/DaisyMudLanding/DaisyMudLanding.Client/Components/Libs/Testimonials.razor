@rendermode InteractiveAuto
<ShowMore>
    <div class="flex flex-row flex-wrap justify-around gap-5">
        @if (_testimonials is null)
        {
            @for (var i = 0; i < 4; i++)
            {
                <TestimonialCard/>
            }
        }
        else
        {
            @foreach (var t in _testimonials)
            {
                <TestimonialCard Testimonial="t"/>
            }
        }
    </div>
</ShowMore>

@inject TestimonialService _testimonialService

@code
{
    [SupplyParameterFromPersistentComponentState]
    private Testimonial[]? _testimonials { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        _testimonials ??= await _testimonialService.GetTestimonials(CancellationToken.None);
    }
}
